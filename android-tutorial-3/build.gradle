apply plugin: 'com.android.application'

android {
  namespace 'org.freedesktop.gstreamer.tutorials.tutorial_3'
    compileSdkVersion 34

    defaultConfig {
        applicationId "org.freedesktop.gstreamer.tutorials.tutorial_3"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"


        externalNativeBuild {
            ndkBuild {
                def gstRoot

                if (project.hasProperty('gstAndroidRoot'))
                    gstRoot = project.gstAndroidRoot
                else
                    gstRoot = System.env.GSTREAMER_ROOT_ANDROID

                if (gstRoot == null)
                    throw new GradleException('GSTREAMER_ROOT_ANDROID must be set, or "gstAndroidRoot" must be defined in your gradle.properties in the top level directory of the unpacked universal GStreamer Android binaries')

                arguments "NDK_APPLICATION_MK=jni/Application.mk", "GSTREAMER_JAVA_SRC_DIR=src", "GSTREAMER_ROOT_ANDROID=$gstRoot", "GSTREAMER_ASSETS_DIR=src/assets"

                targets "tutorial-3"

                // All archs except MIPS and MIPS64 are supported
                abiFilters  'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            sourceSets {
                main {
                    manifest.srcFile 'AndroidManifest.xml'
                    java.srcDirs = ['src']
                    resources.srcDirs = ['src']
                    aidl.srcDirs = ['src']
                    renderscript.srcDirs = ['src']
                    res.srcDirs = ['res']
                    assets.srcDirs = ['assets']
                }
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
  ndkVersion '27.0.12077973'

}

afterEvaluate {
    if (project.hasProperty('compileDebugJavaWithJavac'))
        project.compileDebugJavaWithJavac.dependsOn 'externalNativeBuildDebug'
    if (project.hasProperty('compileReleaseJavaWithJavac'))
        project.compileReleaseJavaWithJavac.dependsOn 'externalNativeBuildRelease'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    // CameraX核心库
    def camerax_version = "1.3.0-alpha05"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-video:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"

    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.core:core:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}
